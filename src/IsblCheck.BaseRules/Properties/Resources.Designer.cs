//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IsblCheck.BaseRules.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IsblCheck.BaseRules.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ошибка форматирования строки. Не найден аргумент для описателя &quot;{0}&quot; (ожидается аргумент с индексом {1}). Шаблон строки: &quot;{2}&quot;..
        /// </summary>
        internal static string ArgumentForTemplateNotFound {
            get {
                return ResourceManager.GetString("ArgumentForTemplateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Для описателя &quot;{0}&quot; передан пустой аргумент. Будет использовано значение по умолчанию. Шаблон строки: &quot;{1}&quot;..
        /// </summary>
        internal static string EmptyFormatArgument {
            get {
                return ResourceManager.GetString("EmptyFormatArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Должен быть заполнен класс исключения.
        /// </summary>
        internal static string ExceptionClassNotSpecified {
            get {
                return ResourceManager.GetString("ExceptionClassNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило, по которому при создании исключения должен указываться класс исключения.
        /// </summary>
        internal static string ExceptionClassNotSpecifiedRuleDescription {
            get {
                return ResourceManager.GetString("ExceptionClassNotSpecifiedRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Длина функции более {0} строк, возможно требуется рефакторинг.
        /// </summary>
        internal static string FunctionTooBig {
            get {
                return ResourceManager.GetString("FunctionTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило ограничения максимальной длины функции..
        /// </summary>
        internal static string FunctionTooBigRuleDescription {
            get {
                return ResourceManager.GetString("FunctionTooBigRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило для проверки наличия справки у функций.
        /// </summary>
        internal static string FunctionWithoutHelpRuleDescription {
            get {
                return ResourceManager.GetString("FunctionWithoutHelpRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило для проверки строк форматирования.
        /// </summary>
        internal static string IncorrectFormatStringRuleDescription {
            get {
                return ResourceManager.GetString("IncorrectFormatStringRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска вызовов функций с неверным количеством параметров.
        /// </summary>
        internal static string IncorrectFunctionParamsCountRuleDescription {
            get {
                return ResourceManager.GetString("IncorrectFunctionParamsCountRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to В событии &quot;{0}&quot; не рекомендуется использовать функции, выводящие диалоговые окна..
        /// </summary>
        internal static string InteractiveWindowsOnEvents {
            get {
                return ResourceManager.GetString("InteractiveWindowsOnEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска использования интерактивных окон в событиях справочника.
        /// </summary>
        internal static string InteractiveWindowsOnEventsRuleDescription {
            get {
                return ResourceManager.GetString("InteractiveWindowsOnEventsRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to В событии &quot;{0}&quot; справочника со строгой нумерацией нельзя использовать функции, выводящие диалоговые окна..
        /// </summary>
        internal static string InteractiveWindowsOnStronglyNumerationReferenceEvents {
            get {
                return ResourceManager.GetString("InteractiveWindowsOnStronglyNumerationReferenceEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Использование несуществующей строки локализации &quot;{0}.{1}&quot;.
        /// </summary>
        internal static string LocalizationStringNotFound {
            get {
                return ResourceManager.GetString("LocalizationStringNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Отсутствует справка к функции.
        /// </summary>
        internal static string NoFunctionHelp {
            get {
                return ResourceManager.GetString("NoFunctionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Неиспользуемая переменная {0}..
        /// </summary>
        internal static string NotUsedVariable {
            get {
                return ResourceManager.GetString("NotUsedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска не используемых переменных..
        /// </summary>
        internal static string NotUsedVarRuleDescription {
            get {
                return ResourceManager.GetString("NotUsedVarRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Для объекта &quot;{0}&quot; не восстанавливается его первоначальное состояние..
        /// </summary>
        internal static string ObjectDoesNotRestoreSelfStatus {
            get {
                return ResourceManager.GetString("ObjectDoesNotRestoreSelfStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска объектов не восстанавливающих свое состояние..
        /// </summary>
        internal static string RecoveryObjectStateRuleDescription {
            get {
                return ResourceManager.GetString("RecoveryObjectStateRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Для аргумента &quot;{0}&quot; с индексом {1} не найден соответствующий описатель. Шаблон строки: &quot;{2}&quot;..
        /// </summary>
        internal static string RedutantFormatArgument {
            get {
                return ResourceManager.GetString("RedutantFormatArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Выражение &quot;{0}&quot; присваивается самому себе. Возможно опечатка..
        /// </summary>
        internal static string SelfAssignmentVarRuleDescription {
            get {
                return ResourceManager.GetString("SelfAssignmentVarRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to В функцию форматирования строки передаётся одно значение - не нужно использовать массив.
        /// </summary>
        internal static string SingleArgumentForFormatFunction {
            get {
                return ResourceManager.GetString("SingleArgumentForFormatFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило для обнаружения вызовов функций Format, LoadStringFormat, в которые передаётся одно значение через ArrayOf.
        /// </summary>
        internal static string SingleFormatArgumentRuleDescription {
            get {
                return ResourceManager.GetString("SingleFormatArgumentRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to В коде не должно оставаться комментариев TODO и DONE: {0}....
        /// </summary>
        internal static string TodoDoneComments {
            get {
                return ResourceManager.GetString("TodoDoneComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска комментариев TODO, DONE..
        /// </summary>
        internal static string TodoDoneCommentsRuleDescription {
            get {
                return ResourceManager.GetString("TodoDoneCommentsRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило использования свойства Info.Reference..
        /// </summary>
        internal static string UsingInfoReferenceDescription {
            get {
                return ResourceManager.GetString("UsingInfoReferenceDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Использование свойства Info.Reference нежелательно, это свойство не всегда указывает на верную запись..
        /// </summary>
        internal static string UsingInfoReferenceRule {
            get {
                return ResourceManager.GetString("UsingInfoReferenceRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска мест использования несуществующих строк локализации.
        /// </summary>
        internal static string UsingNonExistingLocalizationStringRuleDescription {
            get {
                return ResourceManager.GetString("UsingNonExistingLocalizationStringRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Использование необъявленной переменной &quot;{0}&quot;..
        /// </summary>
        internal static string UsingNotAssignedVariable {
            get {
                return ResourceManager.GetString("UsingNotAssignedVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска не означенных переменных..
        /// </summary>
        internal static string UsingNotAssignedVarRuleDescription {
            get {
                return ResourceManager.GetString("UsingNotAssignedVarRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Использование несуществующего справочника &quot;{0}&quot;..
        /// </summary>
        internal static string UsingNotExistedReference {
            get {
                return ResourceManager.GetString("UsingNotExistedReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска использования несуществующего справочника..
        /// </summary>
        internal static string UsingNotExistedReferenceRuleDescription {
            get {
                return ResourceManager.GetString("UsingNotExistedReferenceRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило поиска переменных переопределенных до их использования..
        /// </summary>
        internal static string UsingRedefindedVarRuleDescription {
            get {
                return ResourceManager.GetString("UsingRedefindedVarRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Использование констант True и False в качестве аргументов логического выражения..
        /// </summary>
        internal static string UsingTrueFalseKeywords {
            get {
                return ResourceManager.GetString("UsingTrueFalseKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Правило о том, что нельзя использовать константы True и False в логическом выражении..
        /// </summary>
        internal static string UsingTrueFalseKeywordsRuleDescription {
            get {
                return ResourceManager.GetString("UsingTrueFalseKeywordsRuleDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Переменная &quot;{0}&quot; объявлена во внутреннем блоке кода и может иметь неопределенное значение..
        /// </summary>
        internal static string VariableCanHasUncertainedValue {
            get {
                return ResourceManager.GetString("VariableCanHasUncertainedValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Переменная &quot;{0}&quot; была переопределена до её использования..
        /// </summary>
        internal static string VariableIsRedefinedBeforeUsing {
            get {
                return ResourceManager.GetString("VariableIsRedefinedBeforeUsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Неверное количество параметров при вызове функции.
        /// </summary>
        internal static string WrongFunctionArgumentsCount {
            get {
                return ResourceManager.GetString("WrongFunctionArgumentsCount", resourceCulture);
            }
        }
    }
}
