<UserControl x:Class="IsblCheck.Views.Panels.SourceExplorerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:b="clr-namespace:IsblCheck.UI.Behaviors"
             xmlns:c="clr-namespace:IsblCheck.UI.Controls"
             xmlns:l="clr-namespace:IsblCheck.UI.Localization"
             xmlns:s="clr-namespace:IsblCheck.UI.Styles"
             xmlns:vmt="clr-namespace:IsblCheck.ViewModels.Tree"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

  <UserControl.Resources>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <c:DataContextProxy x:Key="DataContextProxy" DataContext="{Binding}"/>

    <Style x:Key="ToolbarButtonStyle" TargetType="Button">
      <Style.Triggers>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Opacity" Value="0.5"/>
        </Trigger>
      </Style.Triggers>
    </Style>

    <!-- Стиль узла дерева. -->
    <Style x:Key="ContainerTreeNodeStyle" TargetType="TreeViewItem">
      <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
      <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
      <Setter Property="ContextMenu">
        <Setter.Value>
          <ContextMenu>
            <MenuItem Header="{l:Localization CHECK_SELECTED_ITEM}"
                      Command="{Binding Path=DataContext.CheckDocumentsCommand,
                                        Source={StaticResource DataContextProxy},
                                        Mode=OneWay}"
                      CommandParameter="{Binding Mode=OneWay}"/>
          </ContextMenu>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="DocumentTreeNodeStyle" TargetType="TreeViewItem">
      <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
      <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
      <Setter Property="b:MouseDoubleClickBehavior.Command" Value="{Binding Path=DataContext.OpenDocumentCommand,
                                                                            Source={StaticResource DataContextProxy},
                                                                            Mode=OneWay}"/>
      <Setter Property="b:MouseDoubleClickBehavior.CommandParameter" Value="{Binding Document, Mode=OneWay}"/>
      <Setter Property="b:EnterDownBehavior.Command" Value="{Binding Path=DataContext.OpenDocumentCommand,
                                                                     Source={StaticResource DataContextProxy},
                                                                     Mode=OneWay}"/>
      <Setter Property="b:EnterDownBehavior.CommandParameter" Value="{Binding Document, Mode=OneWay}"/>
      <Setter Property="ContextMenu">
        <Setter.Value>
          <ContextMenu>
            <MenuItem Header="{l:Localization OPEN}"
                      Command="{Binding Path=DataContext.OpenDocumentCommand,
                                        Source={StaticResource DataContextProxy},
                                        Mode=OneWay}"
                      CommandParameter="{Binding Document, Mode=OneWay}"/>
            <MenuItem Header="{l:Localization CHECK_SELECTED_ITEM}"
                      Command="{Binding Path=DataContext.CheckDocumentsCommand,
                                        Source={StaticResource DataContextProxy},
                                        Mode=OneWay}"
                      CommandParameter="{Binding Mode=OneWay}"/>
          </ContextMenu>
        </Setter.Value>
      </Setter>
    </Style>

    <s:DynamicStyleSelector x:Key="TreeNodeStyleSelector">
      <s:StyleDefinition Type="{x:Type vmt:ContainerTreeNode}"
                         Style="{StaticResource ContainerTreeNodeStyle}" />
      <s:StyleDefinition Type="{x:Type vmt:DocumentTreeNode}"
                         Style="{StaticResource DocumentTreeNodeStyle}" />
    </s:DynamicStyleSelector>

    <!-- Шаблон узла дерева. -->
    <HierarchicalDataTemplate x:Key="TreeNodeTemplate"
                              ItemsSource="{Binding ItemsView, Mode=OneWay}"
                              ItemContainerStyleSelector="{StaticResource TreeNodeStyleSelector}">
      <StackPanel Orientation="Horizontal">
        <Image Source="{Binding IconSource, Mode=OneWay}"
               Visibility="{Binding HasIconSource, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
               Margin="0,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        <TextBlock VerticalAlignment="Center"
                   TextTrimming="CharacterEllipsis"
                   TextWrapping="NoWrap">
          <TextBlock.Style>
            <Style TargetType="TextBlock">
              <Setter Property="Text" Value="{Binding Title, Mode=OneWay}"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding HasTitleLocalization, Mode=OneWay}" Value="True">
                  <Setter Property="Text" Value="{l:Localization KeyBinding={Binding TitleLocalizationKey, Mode=OneWay}}"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </TextBlock.Style>
        </TextBlock>
        <TextBlock VerticalAlignment="Center"
                   Visibility="{Binding IsItemsCountVisible, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                   TextWrapping="NoWrap"
                   Text="{Binding ItemsView.Count, Mode=OneWay, StringFormat={} ({0})}"/>
      </StackPanel>
    </HierarchicalDataTemplate>
  </UserControl.Resources>
  
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <ToolBarPanel Grid.Row="0">
      <ToolBar ToolBarTray.IsLocked="True">
        <Button Command="{Binding CheckDocumentsCommand, Mode=OneTime}"
                CommandParameter="{Binding SelectedItem, ElementName=ComponentTypesTreeView}"
                Style="{StaticResource ToolbarButtonStyle}"
                ToolTip="{l:Localization CHECK_SELECTED_ITEM}">
          <Image Source="/Resources/Check_16.png"/>
        </Button>
        <Button Command="{Binding CheckAllCommand, Mode=OneTime}"
                Style="{StaticResource ToolbarButtonStyle}"
                ToolTip="{l:Localization CHECK_ALL}">
          <Image Source="/Resources/CheckAll_16.png"/>
        </Button>
      </ToolBar>
    </ToolBarPanel>

    <xctk:WatermarkTextBox Grid.Row="1"
                           Text="{Binding ComponentFilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
      <xctk:WatermarkTextBox.Watermark>
        <TextBlock Text="{l:Localization ENTER_COMPONENT_NAME}"
                   FontStyle="Italic" FontWeight="Light"/>
      </xctk:WatermarkTextBox.Watermark>
      <xctk:WatermarkTextBox.InputBindings>
        <KeyBinding Key="Enter" Command="{Binding FiltrateComponentsCommand, Mode=OneWay}"/>
      </xctk:WatermarkTextBox.InputBindings>
      <i:Interaction.Triggers>
        <i:EventTrigger EventName="LostFocus">
          <i:InvokeCommandAction Command="{Binding FiltrateComponentsCommand, Mode=OneWay}"/>
        </i:EventTrigger>
      </i:Interaction.Triggers>
    </xctk:WatermarkTextBox>

    <TreeView x:Name="ComponentTypesTreeView" Grid.Row="2" Background="Transparent"
              VirtualizingStackPanel.IsVirtualizing="True"
              ItemsSource="{Binding ComponentTypesView, Mode=OneWay}"
              ItemContainerStyleSelector="{StaticResource TreeNodeStyleSelector}"
              ItemTemplate="{StaticResource TreeNodeTemplate}">
    </TreeView>
  </Grid>
</UserControl>
